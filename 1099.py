# 개미는 오른쪽으로 움직이다가 벽을 만나면 아래쪽으로 움직여 가장 빠른 길로 움직였다.
# (오른쪽에 길이 나타나면 다시 오른쪽으로 움직인다.) (x, y축으로 이동하는 2차원 배열 문제임을 알 수 있음)

# 이에 호기심이 생긴 영일이는 그 개미를 미로 상자에 넣고 살펴보기 시작하였다.

# 미로 상자에 넣은 개미는 먹이를 찾았거나, 더 이상 움직일 수 없을 때까지
# 오른쪽 또는 아래쪽으로만 움직였다.

# 미로 상자의 구조가 0(갈 수 있는 곳), 1(벽 또는 장애물)로 주어지고,
# 먹이가 2로 주어질 때, 성실한 개미의 이동 경로를 예상해보자.

# 단, 맨 아래의 가장 오른쪽에 도착한 경우, 더 이상 움직일 수 없는 경우, 먹이를 찾은 경우에는 (if문 3개 필요)
# 더이상 이동하지 않고 그 곳에 머무른다고 가정한다.


# 미로 상자의 테두리는 모두 벽으로 되어 있으며,
# 개미집은 반드시 (2, 2)에 존재하기 때문에 개미는 (2, 2)에서 출발한다.

# 입력
# 10*10 크기의 미로 상자의 구조와 먹이의 위치가 입력된다.


# 출력
# 성실한 개미가 이동한 경로를 9로 표시해 출력한다.
h, w = input("판의 세로 크기, 가로 크기 입력 : ").split()
h, w = int(h), int(w)
arrary = []
n = int(input("막대의 개수 입력 :"))

for i in range(h):
    arrary.append([])
    for j in range(w):
        arrary[i].append(0)


for i in range(n):
    l, d, x, y = input("막대의 길이, 방향(0은 가로, 1은 세로), x좌표, y좌표 입력 : ").split()
    for j in range(int(l)):
        if int(d) == 0:
            arrary[int(x)-1][int(y)-1+j] = 1
        else:
            arrary[int(x)-1+j][int(y)-1] = 1
for i in range(h):
    for j in range(w):
        print(arrary[i][j], end=' ')
    print('')
